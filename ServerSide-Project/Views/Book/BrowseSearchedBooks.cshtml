@using PagedList.Mvc
@using Service.Models
@model Search

@{
    ViewBag.Title = "BrowseSearchedBooks";
    ViewBag.activeBrowseBy = "Book";
}

@if (Model.BookSearchResult.PageCount > 1)
{
    <div class="text-center" id="pageSelector">
        <div class="pagination">
            Page @(Model.BookSearchResult.PageCount < Model.BookSearchResult.PageNumber ? 0 : Model.BookSearchResult.PageNumber)
            of @Model.BookSearchResult.PageCount
            @Html.PagedListPager(Model.BookSearchResult, page => {
                var parameters = new RouteValueDictionary();
                for (int i = 0; i < Model.SelectedClassifications?.Count; i++)
                {
                    parameters.Add("classifications[" + i + "]", Model.SelectedClassifications[i]);
                }
                parameters.Add("search", Model.SearchQuery);
                parameters.Add("page",page);
                return Url.Action("SearchBooks", parameters);
            })
        </div>
    </div>
}

<h2 class="text-center">Books</h2>

@Html.Partial("ListBooks", Model.BookSearchResult)

@if (Model.BookSearchResult.PageCount > 1)
{
    <div class="text-center" id="pageSelector">
        <div class="pagination">
            Page @(Model.BookSearchResult.PageCount < Model.BookSearchResult.PageNumber ? 0 : Model.BookSearchResult.PageNumber)
            of @Model.BookSearchResult.PageCount
            @Html.PagedListPager(Model.BookSearchResult, page =>
                   {
                       var parameters = new RouteValueDictionary();
                       for (int i = 0; i < Model.SelectedClassifications?.Count; i++)
                       {
                           parameters.Add("classifications[" + i + "]", Model.SelectedClassifications[i]);
                       }
                       parameters.Add("search", Model.SearchQuery);
                       parameters.Add("page", page);
                       return Url.Action("SearchBooks", parameters);
                   })
        </div>
    </div>
}