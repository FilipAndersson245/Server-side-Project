@model Service.Models.BookAuthorClassification

@{
    ViewBag.Title = "EditBook";
}

<div class="col-sm-10 col-sm-offset-1">
    <h2>Edit Book</h2>

    @using (Html.BeginForm("EditBook", "BookAuthorClassification", FormMethod.Post, new { @class = "form-group" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Book</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Book.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.ISBN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                    @Html.ValidationMessage(nameof(Model.Book.ISBN), new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage(nameof(Model.Book.Title), new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Publication Year</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage(nameof(Model.Book.PublicationYear), new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.Publicationinfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage(nameof(Model.Book.Publicationinfo), new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Book.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.Pages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage(nameof(Model.Book.Pages), new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="panel panel-default" id="authorSelector">
                    <div class="panel-heading" role="tab" id="headingOne">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" href="#collapseThree" aria-expanded="true" aria-controls="collapseThree" class="trigger collapsed">
                                Select Authors
                            </a>
                        </h4>
                    </div>
                    <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                        <div class="panel-body">
                            @for (int i = 0; i < Model.Authors.Count(); i++)
                            {
                                if (i > 0 && Model.Authors[i].LastName.First() != Model.Authors[i - 1].LastName.First())
                                {
                                    <div class="col-sm-12 text-left authorDropdownDivider">
                                        <h2>@Html.Raw(Model.Authors[i].LastName.First())</h2>
                                    </div>
                                }
                                else if (Model.Authors[i].LastName.First() == 'A' && i == 0)
                                {
                                    <div class="col-sm-12 text-left">
                                        <h2>@Html.Raw('A')</h2>
                                    </div>
                                }
                                bool isChecked = false;
                                foreach (var bookauthor in Model.Book.Authors)
                                {
                                    if (bookauthor.Aid == Model.Authors[i].Aid)
                                    {
                                        isChecked = true;
                                    }
                                }
                                <div class="col-sm-2 text-left">
                                    <label>
                                        <input @(isChecked ? "checked='checked'" : string.Empty) name=authorChecklist type="checkbox" value=@Model.Authors[i].Aid>
                                        @Model.Authors[i].FullName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="panel panel-default" id="classificationSelector">
                    <div class="panel-heading" role="tab" id="headingOne">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" href="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo" class="trigger collapsed">
                                Select Classification
                            </a>
                        </h4>
                    </div>
                    <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="panel-body">
                            @foreach (var classification in Model.Classifications)
                            {
                                <div class="col-sm-2 text-left">
                                    <label>
                                        <input @(Convert.ToBoolean(Model.Book.SignId == classification.SignId) ? "checked='checked'" : string.Empty) name=classificationRadio type="radio" value=@classification.SignId>
                                        @classification.Signum
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "AdminPanel", "Admin", null, null)
    </div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>